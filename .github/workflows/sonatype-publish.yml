name: Build Sonatype release

on:
  release:
    types: [created]

jobs:
  publish-sonatype:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 8 #build on JDK 8 for maximum compatibility
          cache: sbt

      - name: Run tests
        env:
          SBT_JUNIT_OUTPUT: ./junit-tests
        run: sbt '+test'

      - name: Extract build version
        id: project
        run: echo ::set-output name=version::$(sbt -Dsbt.supershell=false -error "print version")

      - name: Release to Sonatype
        if: ${{ !endsWith( steps.project.outputs.version, '-SNAPSHOT') }}
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        run: |
          ./.github/decodekey.sh
          sbt ci-release

      #We can't do a full Sonatype release if going to snapshots apparently, see https://github.com/xerial/sbt-sonatype#publishing-your-artifact
      - name: Release to snapshots
        if: ${{ endsWith( steps.project.outputs.version, '-SNAPSHOT') }}
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        run: |
          ./.github/decodekey.sh
          sbt +publishSigned

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()  #runs even if there is a test failure
        with:
          files: junit-tests/*.xml